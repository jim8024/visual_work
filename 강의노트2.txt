data base가 필요한 이유

app에서 어떤 데이터를 영구 저장하고 체계적으로 관리하고 싶을때

체계적(신뢰성, 여러 사용자가 사용할 수 있는 통신)

DB의 종류는 크게 두가지

1.RDBMS 형식의 DATABASE
-oracle,mysql,mssql....
동일한 sql언어를 사용한다
관리 방법과 함수만 다르다.

2.NOSQL 형식의 DATABASE
-몽고db,카산드라,,,,

DB에 데이터를 테이블 형식으로 저장한다.
표(table)=>column,row

db에 주로 저장하는 데이터는 숫자 문자 날짜 파일data(2진)


---------------------------------------------------------------
SQL> create TABLE member(num NUMBER,name VARCHAR2(16),addr VARCHAR2(20));
테이블 만들기

insert into member(num,name,addr)values(1,'asd','asd');
추가

SQL> update member set name='지렁이' where num=3;
수정

select num,name,addr from member;
보기

L> delete from member
  2  where num=3;
삭제

drop table member;
테이블 삭

sqlplus

racle


conn gura/gura1234바로 접속

- system 계정으로 사용자 계정 생성하기

CREATE USER  계정명 IDENTIFIED BY  비밀번호

- 사용자 계정에 자원, 접속 권한 주기
GRANT  RESOURCE, CONNECT TO  계정명

- TABLE 만들기
CREATE  TABLE  테이블명 ( 칼럼명   데이터TYPE   제약조건, ...    );

- TABLE 에 행 추가하기
INSERT INTO 테이블명
( 칼럼명1, 칼럼명2, 칼럼명3 ...)
VALUES( 값1, 값2, 값3, ... )

- TABLE 조회하기
SELECT  궁금한내용1, 내용2, 내용3
FROM  테이블명( 궁금한 내용이 있는 대상)

- COMMAND 창에서 칼럼의 폭 줄이기 (10 칸으로) 
COLUMN  칼럼명  FORMAT   A10      

- TABLE  ROW  수정하기
UPDATE  테이블명
SET  칼럼명1 = 수정할값,  칼럼명2 = 수정할값 , ...
WHERE  조건절 

- TABLE ROW  삭제하기
DELETE   FROM  테이블명
WHERE   조건절 

- INSERT, UPDATE, DELETE 작업 실제로 반영하기
COMMIT

- INSERT, UPDATE, DELETE 작업 취소하기
ROLLBACK

- SEQUENCE 만들기
CREATE SEQUENCE  시퀀스명

- 만든 SEQUENCE 에서 숫자 얻어내기
시퀀스명.NEXTVAL

- SEQUENCE 삭제하기
DROP SEQUENCE 시퀀스명 

CREATE TABLE  member ( 
num NUMBER, 
name VARCHAR2(12),
 addr VARCHAR2(16)
);



select * from members order by num asc;



CREATE TABLE  member ( 
num NUMBER, 
name VARCHAR2(12),
 addr VARCHAR2(16)
);

- row 추가

INSERT INTO member 
(num, name, addr) 
VALUES (1, '김구라', '노량진');

- row 수정

UPDATE member  
SET  name='xxx'  
WHERE  num=1 ;

- row 삭제 

DELETE FROM member  
WHERE num=1; 

- table 삭제 

DROP TABLE member;




내림차순 정리
SQL> select num,name,birth
  2  from members
  3  order by num desc;
오름차순 정리
SQL> select num,name,birth from members order by name asc;

시퀀스 만들기( 순서 자동으로 계산)
create sequence members_seq;

row의 갯수만큼 출력
select 'hello world' from members;

'HELLOWORLD'
----------------------
hello world
hello world
hello world
hello world
hello world


시퀀시 사용해서 겹치지 않는 숫자 얻기
select members_seq.nextval from dual;
desc emp 보여주기

oracle


SET LINESIZE 200
SET PAGESIZE 20
COLUMN ename format a10
column job format a10

select e1.ename,nvl(e2.ename,'none') mgr
from emp e1, emp e2
where e1.mgr=e2.empno(+)
/널인 경우에 none,컬럼명 바꾸기 mgrs
을 안시조인으로(using 으로는 못바꿈)
select e1.ename,e2.ename
from emp e1
left outer join emp e2 on e1.mgr=e2.empno
/
p58 2번
select ename,dname
from emp
join dept using(deptno)
where ename = 'ALLEN'
/
59p 4번
SELECT e1.ename || ' 의 매니저는 ' || e2.ename || ' 입니다'
from emp e1
join emp e2 on e1.mgr=e2.empno
/

페이징 처리
1.정렬

2.행번호를 순서대로 부여
select result1.*,rownum
from
(select ename,sal
from emp
order by sal asc) result1

3.원하는 범위의 행번호를 계산해서 select.
select *
from
(select result1.*,rownum as sunbun
from
(select ename,sal
from emp
order by sal asc) result1)
where sunbun between 6 and 10
/
create table emp2
(empno number(4),
ename varchar(12) constraint emp2_ename_nn not null,
deptno number(2),
constraint emp2_empno_pk primary key(empno),
constraint  emp2_deptno_fk foreign key(deptno) references dept2(deptno))
/테이블 레벨의 제약조건(not nuldl은 칼럼수준만 가능)

alter table emp2
disable constraint emp2_empno_pk
/제약조건 비활성화

alter table emp2
add constraint emp2_empno_pk primary key(empno)
/제약조건 수정(primary key)

alter table emp2
add constraint emp2_deptno_fk foreign key(deptno) references dept2(deptno)
/제약조건 수정 (fk)

select constraint_name,status
from user_constraints
where table_name='EMP2'
/제약조건의 상태


create table emp2
(empno number(4) constraint emp2_empno_pk primary key,
ename varchar2(12) constraint emp2_ename_nn not null,
deptno number(2) constraint emp2_deptno_fk references dept2(deptno))
/fk and reference

create table dept2
(deptno number(2) constraint dept2_deptno_pk primary key,
dname varchar2(14) constraint dept2_dname_nn not null,
loc varchar2(13) constraint dept2_loc_ck check(loc in ('seoul','busan')))
loc='seoul' or loc='busan'
/제약 조건 이름정하기 (칼럼 옆 제약조건을 column level 제약조건이라한다)


특정 로의 이전,다음 로의 데이터를 같이 셀렉트 하기
select result1.*,
lead(empno,1,0)over(order by sal desc) as next_num,
lag(empno,1,0)over(order by sal desc) as prev_num
from
(select empno,ename,sal
from emp/

order by sal desc) result1
/

/desc user_tables
select table_name from user_tables;
select sequence_name from user_sequences;
desc user_constraints;( 제약 조건 관리)
/
alter user hr accountunlock
/언락하기


select e1.first_name||'의 매니저는'||e2.first_name||'입니다'
from employees e1,employees e2
where e1.manager_id=e2.employee_id
/self join




select *from
(select result1.*,rownum as sunbun
from
(select employee_id,first_name || ' '||last_name,salary
from employees
order by salary desc) result1)
where sunbun between 21 and 30
/순번 나오게 하고 그중에 10개만 나오게















git
 git clone https://github.com/jim8024/visual_work.git
 cd visual_work/
하위 폴더가 만들어 지면서 클론
$ git merge origin/master
fetch(원격 저장소의 새로운 커밋을 orgin/master브랜치로 내려받기)
와 merge(master 에서 내려받은 master/origin를 병합하기)
 를 해야 내려받은 것(pull)

